using UnityEngine;
using System.Collections;
using UnityEngine.AI;

public class FreezeItem : MonoBehaviour
{
    public GameObject targetMonster; // ???????????????
    public float freezeDuration = 3f; // ??????????????
    public float shakeIntensity = 0.1f; // ?????
    public float shakeSpeed = 5f; // ?????
    public int maxUses = 3; // ???????????
    private int remainingUses; // ???????
    private NavMeshAgent monsterAgent; // ??????NavMesh Agent
    private Vector3 originalPosition; // ??????????

    private void Start()
    {
        remainingUses = maxUses; // ????????????????

        // ?????????NavMeshAgent?????????????????????
        if (targetMonster != null)
        {
            monsterAgent = targetMonster.GetComponent<NavMeshAgent>();
            originalPosition = targetMonster.transform.position; // ???????????????
        }
    }

    private void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            UseItem();
        }
    }

    private void UseItem()
    {
        if (remainingUses > 0)
        {
            if (targetMonster != null && monsterAgent != null)
            {
                // ??????????????
                monsterAgent.isStopped = true;

                // ???????????????????
                StartCoroutine(ShakeMonster());

                // ??????????????
                Invoke("ResumeMovement", freezeDuration);

                remainingUses--; // ????????
            }
            else
            {
                Debug.Log("??????????????????NavMeshAgent???????????");
            }
        }
        else
        {
            Debug.Log("?????????????");
        }
    }

    private IEnumerator ShakeMonster()
    {
        // ???????????????
        Vector3 originalPosition = targetMonster.transform.position;
        Quaternion originalRotation = targetMonster.transform.rotation;

        while (monsterAgent.isStopped)
        {
            // ??????????????????????
            Vector3 forwardDirection = targetMonster.transform.forward;
            Vector3 rightDirection = Vector3.Cross(forwardDirection, Vector3.up).normalized;
            float offsetX = Mathf.Sin(Time.time * shakeSpeed) * shakeIntensity;
            Vector3 shakeOffset = rightDirection * offsetX;

            // ?????????
            targetMonster.transform.position = originalPosition + shakeOffset;
            targetMonster.transform.rotation = originalRotation;

            yield return null;
        }
    }

    private void ResumeMovement()
    {
        // ??????????????
        monsterAgent.isStopped = false;

        // ????????????????
        originalPosition = targetMonster.transform.position; // ????
    }
}